basePath: /api/v1
definitions:
  handler.LoginInput:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  handler.RegisterInput:
    properties:
      age:
        type: string
      date_of_birth:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - age
    - date_of_birth
    - email
    - name
    - password
    type: object
  handler.UpdateUserRequest:
    properties:
      age:
        type: string
      date_of_birth:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  helper.Response:
    properties:
      data: {}
      message:
        type: string
      status:
        type: boolean
    type: object
host: localhost:3000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample REST_API .
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: REST API Documentation
  version: "1.0"
paths:
  /admin/users:
    get:
      description: Get a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Get All Users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: Create a new user with name, email, date of birth, age, and password
      parameters:
      - description: Create user input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.RegisterInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Create User
      tags:
      - Users
  /admin/users/{id}:
    delete:
      description: Delete a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Delete User
      tags:
      - Users
    get:
      description: Get a user by their ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Get User By ID
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update an existing user with name, email, date of birth, age, and
        password
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update user input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Update User
      tags:
      - Users
  /login:
    post:
      consumes:
      - application/json
      description: Login with email and password
      parameters:
      - description: Login input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Login
      tags:
      - Authentication
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user with name, email, date of birth, age, and password
      parameters:
      - description: Register input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.RegisterInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/helper.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helper.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/helper.Response'
      summary: Register
      tags:
      - Authentication
swagger: "2.0"
